{"version":3,"sources":["components/InputForm.js","actions/index.js","components/Results.js","components/App.js","reducers/index.js","index.js"],"names":["connect","state","holdings","data","contributions","createHolding","type","payload","id","uuidv4","name","target","currentPrice","editHolding","deleteHolding","editContribution","editResults","props","required","value","undefined","mustBeNumber","isNaN","composeValidators","validators","reduce","error","validator","onSubmit","mutators","arrayMutators","initialValues","render","handleSubmit","values","className","scope","fields","Fragment","map","holding","index","onBlur","validate","input","meta","touched","onClick","htmlFor","style","fontWeight","results","items","prop","a","b","parseInt","percent","Math","floor","fontStyle","App","INITIAL_STATE","combineReducers","action","_","filter","currentHolding","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.eea175d0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createHolding, editHolding, deleteHolding, editContribution, editResults } from '../actions'\r\nimport { Form, Field } from 'react-final-form';\r\nimport arrayMutators from 'final-form-arrays'\r\nimport { FieldArray } from 'react-final-form-arrays';\r\n\r\nconst InputForm = (props) => {\r\n    const onSubmit = ({ holdings, contributions }) => {\r\n        props.editResults({ holdings, contributions })\r\n    };\r\n    const required = value => (value ? undefined : 'Required');\r\n    const mustBeNumber = value => (isNaN(value) ? 'Must be a number' : undefined)\r\n    const composeValidators = (...validators) => value =>\r\n        validators.reduce((error, validator) => error || validator(value), undefined)\r\n\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            mutators={{ ...arrayMutators }}\r\n            initialValues={props}\r\n            render={({ handleSubmit, values }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Holding</th>\r\n                                <th scope=\"col\">Target %</th>\r\n                                <th scope=\"col\">Current Market Price</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <FieldArray name=\"holdings\">\r\n                                {({ fields }) => (\r\n                                    <React.Fragment>\r\n                                        {fields.map((holding, index) => (\r\n                                            <tr key={`${holding}.id`} onBlur={() => props.editHolding(values.holdings[index])} >\r\n                                                <Field\r\n                                                    name={`${holding}.name`}\r\n                                                    validate={required}\r\n                                                >\r\n                                                    {({ input, meta }) => (\r\n                                                        <td>\r\n                                                            <input {...input} type=\"text\" className=\"form-control\" />\r\n                                                            {meta.error && meta.touched && <span className=\"text-danger\">{meta.error}</span>}\r\n                                                        </td>\r\n                                                    )}\r\n                                                </Field>\r\n                                                <Field\r\n                                                    name={`${holding}.target`}\r\n                                                    validate={composeValidators(required, mustBeNumber)}\r\n                                                >\r\n                                                    {({ input, meta }) => (\r\n                                                        <td>\r\n                                                            <input {...input} type=\"text\" className=\"form-control\" />\r\n                                                            {meta.error && meta.touched && <span className=\"text-danger\">{meta.error}</span>}\r\n                                                        </td>\r\n                                                    )}\r\n                                                </Field>\r\n                                                <Field\r\n                                                    name={`${holding}.currentPrice`}\r\n                                                    validate={composeValidators(required, mustBeNumber)}\r\n                                                >\r\n                                                    {({ input, meta }) => (\r\n                                                        <td>\r\n                                                            <input {...input} type=\"text\" className=\"form-control\" />\r\n                                                            {meta.error && meta.touched && <span className=\"text-danger\">{meta.error}</span>}\r\n                                                        </td>\r\n                                                    )}\r\n                                                </Field>\r\n                                                <td>\r\n                                                    <i\r\n                                                        className=\"far fa-trash-alt fa-2x\"\r\n                                                        onClick={() => props.deleteHolding(values.holdings[index].id)}>\r\n                                                    </i>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </React.Fragment>\r\n                                )}\r\n\r\n                            </FieldArray>\r\n                        </tbody>\r\n                    </table>\r\n                    <i className=\"fas fa-plus-circle fa-2x pb-2 d-flex justify-content-center\" onClick={props.createHolding}></i>\r\n                    <div className=\"row g-3\">\r\n                        <div className=\"col-auto\">\r\n                            <label htmlFor=\"contributions\" className=\"col-form-label\" style={{fontWeight: 'bold'}}>Planned Contributions:</label>\r\n                        </div>\r\n                        <Field\r\n                            name=\"contributions\"\r\n                            id=\"contributions\"\r\n                            validate={composeValidators(required, mustBeNumber)}\r\n                        >\r\n                            {({ input, meta }) => (\r\n                                <div className=\"col-auto\">\r\n                                    <input {...input} type=\"text\" className=\"form-control\" onBlur={() => props.editContribution(values.contributions)} />\r\n                                    {meta.error && meta.touched && <span className=\"text-danger\">{meta.error}</span>}\r\n                                </div>\r\n                            )}\r\n                        </Field>\r\n                    </div>\r\n                    <button className=\"btn btn-primary\">Calculate</button>\r\n                </form>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        holdings: state.data.holdings,\r\n        contributions: state.data.contributions\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { createHolding, editHolding, deleteHolding, editContribution, editResults })(InputForm);","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const createHolding = () => {\r\n    return {\r\n        type: 'CREATE_HOLDING',\r\n        payload: { id: uuidv4(), name: null, target: null, currentPrice: null }\r\n    };\r\n};\r\n\r\nexport const editHolding = payload => {\r\n    return {\r\n        type: 'EDIT_HOLDING',\r\n        payload\r\n    };\r\n};\r\n\r\nexport const deleteHolding = id => {\r\n    return {\r\n        type: 'DELETE_HOLDING',\r\n        payload: id\r\n    };\r\n};\r\n\r\nexport const editContribution = payload => {\r\n    return {\r\n        type: 'EDIT_CONTRIBUTION',\r\n        payload\r\n    };\r\n};\r\n\r\nexport const editResults = payload => {\r\n    return {\r\n        type: 'EDIT_RESULTS',\r\n        payload\r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst sum = function (items, prop) {\r\n    return items.reduce(function (a, b) {\r\n        return a + parseInt(b[prop]);\r\n    }, 0);\r\n};\r\n\r\nconst Results = props => {\r\n    const sharesToBuy = function (percent, currentPrice) {\r\n        return Math.floor(percent / 100 * props.results.contributions / currentPrice)\r\n    }\r\n\r\n    if (!props.results.holdings) {\r\n        return null;\r\n    } else if (sum(props.results.holdings, 'target') !== 100) {\r\n        return (\r\n            <div className=\"text-danger\">Check if allocations sum to 100%</div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <h3>Shares to buy</h3>\r\n                {props.results.holdings.map((holding, index) =>\r\n                    <p key={index}>{sharesToBuy(holding.target, holding.currentPrice)} shares of {holding.name}</p>\r\n                )}\r\n                <p className=\"text-danger\" style={{fontStyle: 'italic'}}>Author Note: I take no responsibility for the accuracy of this calculator. Check the math. Check the formulas. I'm not an expert. </p>\r\n            </div>\r\n        )\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        results: state.data.results,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Results);","import React from 'react';\r\nimport InputForm from './InputForm';\r\nimport Results from './Results';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Very Simple Contribution Calculator</h1>\r\n            <p style={{ fontWeight: \"bold\" }}>The steps:</p>\r\n            <ol>\r\n                <li>Enter your holdings (Name of the tickers, target balance, and market price)</li>\r\n                <li>Enter the value of cash you're planning to use to make a purchase (the planned contribution)</li>\r\n                <li>It calculates how many shares of each holding to buy based on your target balance. You check that it looks reasonable, and make that trade.</li>\r\n            </ol>\r\n            <h2>Enter target allocations</h2>\r\n            <InputForm />\r\n            <br />\r\n            <Results />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport _ from 'lodash';\r\n\r\nconst INITIAL_STATE = {\r\n    holdings:\r\n        [\r\n            { id: uuidv4(), name: null, target: null, currentPrice: null },\r\n            { id: uuidv4(), name: null, target: null, currentPrice: null }\r\n        ],\r\n    contributions: null,\r\n    results: {}\r\n};\r\nconst dataReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_HOLDING':\r\n            return { ...state, holdings: [...state.holdings, action.payload] };\r\n        case 'EDIT_HOLDING':\r\n            return { ...state, holdings: state.holdings.map((holding) => holding.id === action.payload.id ? action.payload : holding) };\r\n        case 'DELETE_HOLDING':\r\n            return { ...state, holdings: _.filter(state.holdings, function (currentHolding) { return currentHolding.id !== action.payload }) };\r\n        case 'EDIT_CONTRIBUTION':\r\n            return { ...state, contributions: action.payload };\r\n        case 'EDIT_RESULTS':\r\n            return { ...state, results: action.payload }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default combineReducers({\r\n    data: dataReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}